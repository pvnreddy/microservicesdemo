2022-05-02 16:21:35 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2022-05-02 16:21:36 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2022-05-02 16:21:37 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2022-05-02 16:21:37 [main] WARN  o.s.c.c.c.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/reactive-elastic-query-service,config-client/reactive_elastic_query": Connection refused (Connection refused); nested exception is java.net.ConnectException: Connection refused (Connection refused)
2022-05-02 16:21:37 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: reactive_elastic_query
2022-05-02 16:21:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:21:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 196ms. Found 0 Elasticsearch repository interfaces.
2022-05-02 16:21:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:21:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17ms. Found 1 Reactive Elasticsearch repository interfaces.
2022-05-02 16:21:38 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5c44dd1e-274e-37fa-8ba4-98fbb015ba7a
2022-05-02 16:21:39 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:21:39 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:21:39 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:21:39 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:21:39 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2022-05-02 16:21:39 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2022-05-02 16:21:39 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2022-05-02 16:21:39 [reactor-http-nio-1] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2022-05-02 16:21:39 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 9df500a5-054b-4ae9-9a57-4b0858fcdf21

2022-05-02 16:21:40 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2022-05-02 16:21:40 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 9.527 seconds (JVM running for 12.506)
2022-05-02 16:28:18 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2022-05-02 16:28:18 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2022-05-02 16:28:20 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=reactive-elastic-query-service,config-client, profiles=[reactive_elastic_query], label=null, version=3378b07c11914efbfe6f1bc33115e0c769a022af, state=null
2022-05-02 16:28:20 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/pvnreddy/microservices-demo-config/config-client.yml'}]
2022-05-02 16:28:20 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: reactive_elastic_query
2022-05-02 16:28:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:28:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 165ms. Found 0 Elasticsearch repository interfaces.
2022-05-02 16:28:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:28:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15ms. Found 1 Reactive Elasticsearch repository interfaces.
2022-05-02 16:28:21 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5c44dd1e-274e-37fa-8ba4-98fbb015ba7a
2022-05-02 16:28:22 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:28:22 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:28:22 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:28:22 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:28:22 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2022-05-02 16:28:22 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2022-05-02 16:28:22 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2022-05-02 16:28:22 [reactor-http-nio-1] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2022-05-02 16:28:22 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 48bb0867-55c6-407b-86cd-bf94f00c7c89

2022-05-02 16:28:23 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2022-05-02 16:28:23 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 6.438 seconds (JVM running for 8.221)
2022-05-02 16:33:20 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2022-05-02 16:33:21 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2022-05-02 16:33:23 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=reactive-elastic-query-service,config-client, profiles=[reactive_elastic_query], label=null, version=3378b07c11914efbfe6f1bc33115e0c769a022af, state=null
2022-05-02 16:33:23 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/pvnreddy/microservices-demo-config/config-client.yml'}]
2022-05-02 16:33:23 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: reactive_elastic_query
2022-05-02 16:33:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:33:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 266ms. Found 0 Elasticsearch repository interfaces.
2022-05-02 16:33:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:33:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 1 Reactive Elasticsearch repository interfaces.
2022-05-02 16:33:25 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=7c5516cc-ab7d-3b18-98ca-230cfff938f2
2022-05-02 16:33:25 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:33:25 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:33:25 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:33:25 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:33:26 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2022-05-02 16:33:26 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2022-05-02 16:33:26 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2022-05-02 16:33:26 [reactor-http-nio-1] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2022-05-02 16:33:26 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: fbd0c09c-3769-4d80-a940-a06ace2ecc35

2022-05-02 16:33:27 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2022-05-02 16:33:27 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 7.225 seconds (JVM running for 8.868)
2022-05-02 16:34:34 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2022-05-02 16:34:35 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2022-05-02 16:34:37 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=reactive-elastic-query-service,config-client, profiles=[elastic_query], label=null, version=3378b07c11914efbfe6f1bc33115e0c769a022af, state=null
2022-05-02 16:34:37 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/pvnreddy/microservices-demo-config/config-client-elastic_query.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/pvnreddy/microservices-demo-config/config-client.yml'}]
2022-05-02 16:34:37 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: elastic_query
2022-05-02 16:34:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:34:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 186ms. Found 0 Elasticsearch repository interfaces.
2022-05-02 16:34:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:34:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24ms. Found 1 Reactive Elasticsearch repository interfaces.
2022-05-02 16:34:38 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=7c5516cc-ab7d-3b18-98ca-230cfff938f2
2022-05-02 16:34:38 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:34:38 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:34:38 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:34:38 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:34:39 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2022-05-02 16:34:39 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2022-05-02 16:34:39 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2022-05-02 16:34:39 [reactor-http-nio-1] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2022-05-02 16:34:39 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 28c1758f-3aab-4a78-b2fd-f7e8562750c5

2022-05-02 16:34:40 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8183
2022-05-02 16:34:40 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 6.82 seconds (JVM running for 8.357)
2022-05-02 16:36:59 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2022-05-02 16:37:01 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2022-05-02 16:37:02 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=reactive-elastic-query-service,config-client, profiles=[reactive_elastic_query], label=null, version=3378b07c11914efbfe6f1bc33115e0c769a022af, state=null
2022-05-02 16:37:02 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/pvnreddy/microservices-demo-config/config-client.yml'}]
2022-05-02 16:37:02 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: reactive_elastic_query
2022-05-02 16:37:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:37:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 219ms. Found 0 Elasticsearch repository interfaces.
2022-05-02 16:37:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:37:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15ms. Found 1 Reactive Elasticsearch repository interfaces.
2022-05-02 16:37:04 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=7c5516cc-ab7d-3b18-98ca-230cfff938f2
2022-05-02 16:37:04 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:37:04 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:37:04 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:37:04 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:37:05 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2022-05-02 16:37:05 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2022-05-02 16:37:05 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2022-05-02 16:37:05 [reactor-http-nio-1] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2022-05-02 16:37:05 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: ed209d3f-f172-44e9-8e40-11a4bc5fd157

2022-05-02 16:37:06 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2022-05-02 16:37:06 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 7.559 seconds (JVM running for 9.233)
2022-05-02 16:42:09 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2022-05-02 16:42:10 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2022-05-02 16:42:11 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=reactive-elastic-query-service,config-client, profiles=[reactive_elastic_query], label=null, version=3378b07c11914efbfe6f1bc33115e0c769a022af, state=null
2022-05-02 16:42:11 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/pvnreddy/microservices-demo-config/config-client.yml'}]
2022-05-02 16:42:11 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: reactive_elastic_query
2022-05-02 16:42:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:42:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 198ms. Found 0 Elasticsearch repository interfaces.
2022-05-02 16:42:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:42:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 1 Reactive Elasticsearch repository interfaces.
2022-05-02 16:42:12 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=7c5516cc-ab7d-3b18-98ca-230cfff938f2
2022-05-02 16:42:12 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:42:12 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:42:12 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:42:12 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:42:13 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2022-05-02 16:42:13 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2022-05-02 16:42:13 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2022-05-02 16:42:13 [reactor-http-nio-1] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2022-05-02 16:42:13 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 409adc5a-b28f-4757-a8bc-063a414fa615

2022-05-02 16:42:14 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2022-05-02 16:42:14 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 5.816 seconds (JVM running for 7.373)
2022-05-02 16:44:59 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2022-05-02 16:45:02 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2022-05-02 16:45:08 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=reactive-elastic-query-service,config-client, profiles=[reactive_elastic_query], label=null, version=78fc92f9493a2c81e27145f20b7acd44d1264450, state=null
2022-05-02 16:45:08 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/pvnreddy/microservices-demo-config/config-client-reactive_elastic_query.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/pvnreddy/microservices-demo-config/config-client.yml'}]
2022-05-02 16:45:08 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: reactive_elastic_query
2022-05-02 16:45:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:45:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 178ms. Found 0 Elasticsearch repository interfaces.
2022-05-02 16:45:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-05-02 16:45:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 1 Reactive Elasticsearch repository interfaces.
2022-05-02 16:45:09 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=7c5516cc-ab7d-3b18-98ca-230cfff938f2
2022-05-02 16:45:09 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:45:09 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:45:09 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:45:09 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-02 16:45:10 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2022-05-02 16:45:10 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2022-05-02 16:45:10 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2022-05-02 16:45:10 [reactor-http-nio-1] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2022-05-02 16:45:10 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 7e842530-5617-4696-a8a4-7f3c1f357758

2022-05-02 16:45:11 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8186
2022-05-02 16:45:11 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 12.902 seconds (JVM running for 16.359)
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.b.i.TwitterElasticQueryService - Querying Elastic search for text test
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text test
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text {}!test
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@31ae37a7, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@31ae37a7, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onSubscribe(FluxMap.MapSubscriber)
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - request(1)
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@31ae37a7, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@31ae37a7, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@31ae37a7, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@31ae37a7, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@31ae37a7, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:45:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@31ae37a7, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:45:25 [reactor-http-nio-4] ERROR reactor.Flux.Map.1 - onError(org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.)
2022-05-02 16:45:25 [reactor-http-nio-4] ERROR reactor.Flux.Map.1 - 
org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$null$4(SingleNodeHostProvider.java:106)
	at reactor.core.publisher.MonoErrorSupplied.call(MonoErrorSupplied.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:68)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2021)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:390)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:251)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:252)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:87)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:197)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:213)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:255)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:406)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243)
	at reactor.core.publisher.DirectProcessor$DirectInner.onNext(DirectProcessor.java:339)
	at reactor.core.publisher.DirectProcessor.onNext(DirectProcessor.java:148)
	at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:180)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$TcpClientSubscriber.onError(HttpClientConnect.java:353)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
	at reactor.netty.resources.PooledConnectionProvider$DisposableAcquire.onError(PooledConnectionProvider.java:521)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:423)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$5(SimpleDequePool.java:253)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:172)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
	at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:302)
	at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:252)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:570)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:549)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:608)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
2022-05-02 16:45:25 [reactor-http-nio-4] ERROR c.m.d.e.q.s.c.a.e.h.ElasticQueryServiceErrorHandler - Service runtime exception 
org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$null$4(SingleNodeHostProvider.java:106)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.microservices.demo.reactive.elastic.query.service.api.ElasticDocumentController#getDocumentsByText(ElasticQueryServiceRequestModel) [DispatcherHandler]
Stack trace:
		at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$null$4(SingleNodeHostProvider.java:106)
		at reactor.core.publisher.MonoErrorSupplied.call(MonoErrorSupplied.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:68)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2021)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:251)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:252)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:87)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:197)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:213)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:255)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:406)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243)
		at reactor.core.publisher.DirectProcessor$DirectInner.onNext(DirectProcessor.java:339)
		at reactor.core.publisher.DirectProcessor.onNext(DirectProcessor.java:148)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$TcpClientSubscriber.onError(HttpClientConnect.java:353)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
		at reactor.netty.resources.PooledConnectionProvider$DisposableAcquire.onError(PooledConnectionProvider.java:521)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:423)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$5(SimpleDequePool.java:253)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:172)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
		at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:302)
		at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:252)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:549)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:608)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.b.i.TwitterElasticQueryService - Querying Elastic search for text test
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text test
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text {}!test
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onSubscribe(FluxMap.MapSubscriber)
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - request(1)
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@28c4d6d6, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:48:04 [reactor-http-nio-4] ERROR reactor.Flux.Map.2 - onError(org.springframework.data.elasticsearch.UncategorizedElasticsearchException: Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];], Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]; nested exception is ElasticsearchStatusException[Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];], Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]]; nested: ElasticsearchException[Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]];)
2022-05-02 16:48:04 [reactor-http-nio-4] ERROR reactor.Flux.Map.2 - 
org.springframework.data.elasticsearch.UncategorizedElasticsearchException: Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];], Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]; nested exception is ElasticsearchStatusException[Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];], Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]]; nested: ElasticsearchException[Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]];
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:67)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.translateException(ReactiveElasticsearchTemplate.java:796)
	at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:6504)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:88)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:408)
	at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:485)
	at reactor.core.publisher.Operators.complete(Operators.java:135)
	at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:374)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:214)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:834)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:600)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:580)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:443)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:126)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:196)
	at reactor.core.publisher.EmitterProcessor.checkTerminated(EmitterProcessor.java:489)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:356)
	at reactor.core.publisher.EmitterProcessor.onError(EmitterProcessor.java:286)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:834)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:600)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:580)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:855)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:1006)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:247)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:135)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:385)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onNext(FluxContextStart.java:96)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:287)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:330)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:152)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:252)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:374)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:373)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:429)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:655)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.elasticsearch.ElasticsearchStatusException: Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];], Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.contentOrError(DefaultReactiveElasticsearchClient.java:850)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.lambda$handleServerError$31(DefaultReactiveElasticsearchClient.java:813)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	... 43 common frames omitted
Caused by: org.elasticsearch.ElasticsearchException: Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]
	at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:496)
	at org.elasticsearch.ElasticsearchException.failureFromXContent(ElasticsearchException.java:603)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.getElasticsearchException(DefaultReactiveElasticsearchClient.java:875)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.contentOrError(DefaultReactiveElasticsearchClient.java:845)
	... 45 common frames omitted
	Suppressed: org.elasticsearch.ElasticsearchException: Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]
		at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:496)
		at org.elasticsearch.ElasticsearchException.fromXContent(ElasticsearchException.java:407)
		at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:469)
		... 48 common frames omitted
2022-05-02 16:48:04 [reactor-http-nio-4] ERROR c.m.d.e.q.s.c.a.e.h.ElasticQueryServiceErrorHandler - Service runtime exception 
org.springframework.data.elasticsearch.UncategorizedElasticsearchException: Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];], Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]; nested exception is ElasticsearchStatusException[Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];], Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]]; nested: ElasticsearchException[Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]];
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:67)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.microservices.demo.reactive.elastic.query.service.api.ElasticDocumentController#getDocumentsByText(ElasticQueryServiceRequestModel) [DispatcherHandler]
Stack trace:
		at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:67)
		at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.translateException(ReactiveElasticsearchTemplate.java:796)
		at reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:6504)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:88)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:408)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:485)
		at reactor.core.publisher.Operators.complete(Operators.java:135)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:374)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:214)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:834)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:600)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:580)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.onError(FluxFlatMap.java:443)
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:126)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:196)
		at reactor.core.publisher.EmitterProcessor.checkTerminated(EmitterProcessor.java:489)
		at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:356)
		at reactor.core.publisher.EmitterProcessor.onError(EmitterProcessor.java:286)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:834)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:600)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:580)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:855)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:1006)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:247)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:135)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onNext(FluxContextStart.java:96)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:287)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:330)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:152)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:252)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:374)
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:373)
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:429)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:655)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.elasticsearch.ElasticsearchStatusException: Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];], Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.contentOrError(DefaultReactiveElasticsearchClient.java:850)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.lambda$handleServerError$31(DefaultReactiveElasticsearchClient.java:813)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:385)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
	at reactor.core.publisher.FluxContextStart$ContextStartSubscriber.onNext(FluxContextStart.java:96)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:287)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:330)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:152)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:252)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:374)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:373)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:429)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:655)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:96)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.elasticsearch.ElasticsearchException: Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]
	at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:496)
	at org.elasticsearch.ElasticsearchException.failureFromXContent(ElasticsearchException.java:603)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.getElasticsearchException(DefaultReactiveElasticsearchClient.java:875)
	at org.springframework.data.elasticsearch.client.reactive.DefaultReactiveElasticsearchClient.contentOrError(DefaultReactiveElasticsearchClient.java:845)
	... 45 common frames omitted
	Suppressed: org.elasticsearch.ElasticsearchException: Elasticsearch exception [type=cluster_block_exception, reason=blocked by: [SERVICE_UNAVAILABLE/1/state not recovered / initialized];]
		at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:496)
		at org.elasticsearch.ElasticsearchException.fromXContent(ElasticsearchException.java:407)
		at org.elasticsearch.ElasticsearchException.innerFromXContent(ElasticsearchException.java:469)
		... 48 common frames omitted
2022-05-02 16:49:22 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.b.i.TwitterElasticQueryService - Querying Elastic search for text test
2022-05-02 16:49:22 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text test
2022-05-02 16:49:22 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text {}!test
2022-05-02 16:49:22 [reactor-http-nio-4] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@73a02489, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:49:22 [reactor-http-nio-4] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@73a02489, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:49:22 [reactor-http-nio-4] INFO  reactor.Flux.Map.3 - onSubscribe(FluxMap.MapSubscriber)
2022-05-02 16:49:22 [reactor-http-nio-4] INFO  reactor.Flux.Map.3 - request(1)
2022-05-02 16:49:22 [reactor-http-nio-4] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@73a02489, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:49:23 [reactor-http-nio-4] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@73a02489, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:49:23 [reactor-http-nio-4] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@73a02489, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:49:23 [reactor-http-nio-4] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@73a02489, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:49:23 [reactor-http-nio-4] INFO  reactor.Flux.Map.3 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@73a02489, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-05-02 16:49:23 [parallel-1] INFO  reactor.Flux.Map.3 - onNext(ElasticQueryServiceResponceModel(id=1, userId=1, text=test multi word, createdAt=2020-01-01T23:00:50))
2022-05-02 16:49:23 [reactor-http-nio-4] INFO  reactor.Flux.Map.3 - request(31)
2022-05-02 16:49:24 [parallel-2] INFO  reactor.Flux.Map.3 - onNext(ElasticQueryServiceResponceModel(id=2, userId=2, text=test pvnr elastic search, createdAt=2021-01-01T23:00:50))
2022-05-02 16:49:24 [parallel-3] INFO  reactor.Flux.Map.3 - onNext(ElasticQueryServiceResponceModel(id=1518605072426573825, userId=1035060832017629184, text=#java https://t.co/m4tvXtEZRr #sdsdfsdf #test #good #lol https://t.co/44kLquTGz3, createdAt=2022-04-25T14:57:18))
2022-05-02 16:49:25 [parallel-4] INFO  reactor.Flux.Map.3 - onNext(ElasticQueryServiceResponceModel(id=1518901464328212480, userId=1437728609909706753, text=RT @ramsatt: How to complete Hackerrank Certification Test - Angular
#angular #html #javascript #css #programming #java #python #reactjs #w…, createdAt=2022-04-26T10:35:03))
2022-05-02 16:49:25 [parallel-1] INFO  reactor.Flux.Map.3 - onNext(ElasticQueryServiceResponceModel(id=1518901464927637504, userId=411419084, text=RT @ramsatt: How to complete Hackerrank Certification Test - Angular
#angular #html #javascript #css #programming #java #python #reactjs #w…, createdAt=2022-04-26T10:35:03))
2022-05-02 16:49:26 [parallel-2] INFO  reactor.Flux.Map.3 - onNext(ElasticQueryServiceResponceModel(id=1518901593634136065, userId=310897418, text=RT @ramsatt: How to complete Hackerrank Certification Test - Angular
#angular #html #javascript #css #programming #java #python #reactjs #w…, createdAt=2022-04-26T10:35:34))
2022-05-02 16:49:26 [parallel-3] INFO  reactor.Flux.Map.3 - onNext(ElasticQueryServiceResponceModel(id=1518901441141907456, userId=183984039, text=How to complete Hackerrank Certification Test - Angular
#angular #html #javascript #css #programming #java #python #reactjs #webdevelopment #nodejs #php #webdeveloper #coding #react #vuejs #software #js #softwaredeveloper #developer #webdesign #progra...
https://t.co/dycsAPRE6Q, createdAt=2022-04-26T10:34:58))
2022-05-02 16:49:26 [parallel-3] INFO  reactor.Flux.Map.3 - onComplete()
